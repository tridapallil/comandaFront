{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Luiz Felipe\\\\Documents\\\\React\\\\comandafront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Luiz Felipe\\\\Documents\\\\React\\\\comandafront\\\\src\\\\pages\\\\UserRegister.js\";\nimport React, { useEffect } from 'react';\nimport '../styles/User.css';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { useSnackbar } from 'notistack';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport api from '../services/api';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    marginTop: 65,\n    flexGrow: 1\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  },\n  button: {\n    padding: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function User({\n  match,\n  history\n}) {\n  const classes = useStyles();\n  const userId = match.params.userId;\n\n  const _useSnackbar = useSnackbar(),\n        enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        name = _React$useState2[0],\n        setName = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        password = _React$useState4[0],\n        setPassword = _React$useState4[1];\n\n  const _React$useState5 = React.useState(''),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        phone = _React$useState6[0],\n        setPhone = _React$useState6[1];\n\n  const _React$useState7 = React.useState(''),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        email = _React$useState8[0],\n        setEmail = _React$useState8[1];\n\n  const _React$useState9 = React.useState(''),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        cpf = _React$useState10[0],\n        setCpf = _React$useState10[1];\n\n  const _React$useState11 = React.useState(''),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        passwordConfirm = _React$useState12[0],\n        setPasswordConfirm = _React$useState12[1];\n\n  const _React$useState13 = React.useState(''),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        username = _React$useState14[0],\n        setUsername = _React$useState14[1];\n\n  const _React$useState15 = React.useState(''),\n        _React$useState16 = _slicedToArray(_React$useState15, 2),\n        id = _React$useState16[0],\n        setId = _React$useState16[1];\n\n  const _React$useState17 = React.useState(''),\n        _React$useState18 = _slicedToArray(_React$useState17, 2),\n        type = _React$useState18[0],\n        setType = _React$useState18[1];\n\n  const _React$useState19 = React.useState(''),\n        _React$useState20 = _slicedToArray(_React$useState19, 2),\n        companyId = _React$useState20[0],\n        setCompanyId = _React$useState20[1];\n\n  const _React$useState21 = React.useState(0),\n        _React$useState22 = _slicedToArray(_React$useState21, 2),\n        labelWidth = _React$useState22[0],\n        setLabelWidth = _React$useState22[1];\n\n  const _React$useState23 = React.useState(''),\n        _React$useState24 = _slicedToArray(_React$useState23, 2),\n        age = _React$useState24[0],\n        setAge = _React$useState24[1];\n\n  const tokenId = localStorage.getItem('@comanda/token');\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const response = await api.post('/user', {\n      _id: id,\n      name,\n      username,\n      email,\n      phone,\n      cpf,\n      type,\n      companyId,\n      password,\n      passwordConfirm\n    }).catch(error => {\n      enqueueSnackbar('Falha ao efetuar cadastro.', {\n        variant: 'error'\n      });\n    });\n\n    if (!response.data.error) {\n      history.push('/user');\n      enqueueSnackbar('Cadastro efetuado com sucesso!', {\n        variant: 'success'\n      });\n    } else {\n      enqueueSnackbar('Falha ao efetuar cadastro.', {\n        variant: 'error'\n      });\n    }\n  }\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  useEffect(() => {\n    if (userId) {\n      async function loadUser() {\n        const response = await api.get('/user/' + userId, {\n          headers: {\n            'x-access-token': tokenId\n          }\n        });\n        setId(response.data._id);\n        setName(response.data.name);\n        setUsername(response.data.username);\n        setEmail(response.data.email);\n        setPhone(response.data.phone);\n        setType(response.data.type);\n        setCpf(response.data.cpf);\n        setCompanyId(response.data.companyId);\n      }\n\n      loadUser();\n    }\n  }, [tokenId]);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"component-simple\",\n    value: id,\n    onChange: handleChange,\n    type: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Cadastro\")), React.createElement(Grid, {\n    spacing: 3,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-simple\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Usu\\xE1rio\"), React.createElement(Input, {\n    id: \"component-simple\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(Input, {\n    id: \"component-simple\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Telefone\"), React.createElement(Input, {\n    id: \"component-simple\",\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"CPF\"), React.createElement(Input, {\n    id: \"component-simple\",\n    value: cpf,\n    onChange: e => setCpf(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Tipo Perfil\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: type,\n    onChange: e => setType(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Sistema\"), React.createElement(MenuItem, {\n    value: 2,\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Empresa\"), React.createElement(MenuItem, {\n    value: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Cliente\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Empresa\"), React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: companyId,\n    onChange: e => setCompanyId(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Ydeal\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Alterar Senha\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Nova Senha\"), React.createElement(Input, {\n    id: \"component-simple\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Repetir Senha\"), React.createElement(Input, {\n    id: \"component-simple\",\n    type: \"password\",\n    value: passwordConfirm,\n    onChange: e => setPasswordConfirm(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    className: classes.button,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"Salvar\")))))));\n}","map":{"version":3,"sources":["C:\\Users\\Luiz Felipe\\Documents\\React\\comandafront\\src\\pages\\UserRegister.js"],"names":["React","useEffect","lighten","makeStyles","useSnackbar","FormControl","Input","InputLabel","Typography","Grid","Button","Select","MenuItem","Divider","Paper","api","useStyles","theme","root","paddingLeft","spacing","paddingRight","marginTop","flexGrow","selectEmpty","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","button","padding","paper","textAlign","User","match","history","classes","userId","params","enqueueSnackbar","useState","name","setName","password","setPassword","phone","setPhone","email","setEmail","cpf","setCpf","passwordConfirm","setPasswordConfirm","username","setUsername","id","setId","setType","companyId","setCompanyId","labelWidth","setLabelWidth","age","setAge","tokenId","localStorage","getItem","handleSubmit","e","preventDefault","response","post","_id","catch","error","variant","data","push","handleChange","event","target","value","loadUser","get","headers","formControl"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport '../styles/User.css';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport { useSnackbar } from 'notistack';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport api from '../services/api'\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    marginTop: 65,\r\n    flexGrow: 1,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n  button: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function User({ match, history }) {\r\n\r\n  const classes = useStyles();\r\n  \r\n  const userId = match.params.userId;\r\n  \r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [name, setName] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [phone, setPhone] = React.useState('');\r\n  const [email, setEmail] = React.useState('');\r\n  const [cpf, setCpf] = React.useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = React.useState('');\r\n  const [username, setUsername] = React.useState('');\r\n  const [id, setId] = React.useState('');\r\n  const [type, setType] = React.useState('');\r\n  const [companyId, setCompanyId] = React.useState('');\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const tokenId = localStorage.getItem('@comanda/token');\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const response = await api.post('/user', { _id: id, name, username, email, phone, cpf, type, companyId, password, passwordConfirm }).catch(error => {\r\n      enqueueSnackbar('Falha ao efetuar cadastro.', {\r\n        variant: 'error'\r\n      });\r\n    });\r\n\r\n    if (!response.data.error) {\r\n      history.push('/user');\r\n      enqueueSnackbar('Cadastro efetuado com sucesso!', {\r\n        variant: 'success'\r\n      });\r\n    } else {\r\n      enqueueSnackbar('Falha ao efetuar cadastro.', {\r\n        variant: 'error'\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      async function loadUser() {\r\n        const response = await api.get('/user/' + userId, {\r\n          headers: {\r\n            'x-access-token': tokenId,\r\n          }\r\n        })\r\n        setId(response.data._id);\r\n        setName(response.data.name);\r\n        setUsername(response.data.username);\r\n        setEmail(response.data.email);\r\n        setPhone(response.data.phone);\r\n        setType(response.data.type);\r\n        setCpf(response.data.cpf);\r\n        setCompanyId(response.data.companyId);\r\n      }\r\n\r\n      loadUser();\r\n    }\r\n  }, [tokenId]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid className={classes.root}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Input id=\"component-simple\" value={id} onChange={handleChange} type=\"hidden\" />\r\n          <Paper className={classes.paper}>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n              <Typography className={classes.title} variant=\"h6\" >\r\n                Cadastro\r\n              </Typography>\r\n            </Grid>\r\n            <Grid spacing={3} container>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\r\n                  <Input\r\n                    id=\"component-simple\"\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"component-simple\">Usuário</InputLabel>\r\n                  <Input\r\n                    id=\"component-simple\"\r\n                    value={username}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <FormControl fullWidth className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"component-simple\">E-mail</InputLabel>\r\n                  <Input\r\n                    id=\"component-simple\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <FormControl fullWidth className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"component-simple\">Telefone</InputLabel>\r\n                  <Input\r\n                    id=\"component-simple\"\r\n                    value={phone}\r\n                    onChange={e => setPhone(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <FormControl fullWidth className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"component-simple\">CPF</InputLabel>\r\n                  <Input\r\n                    id=\"component-simple\"\r\n                    value={cpf}\r\n                    onChange={e => setCpf(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth className={classes.formControl}>\r\n                  <InputLabel id=\"demo-simple-select-label\">Tipo Perfil</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={type}\r\n                    onChange={e => setType(e.target.value)}\r\n                  >\r\n                    <MenuItem value={1}>Sistema</MenuItem>\r\n                    <MenuItem value={2} selected>Empresa</MenuItem>\r\n                    <MenuItem value={3}>Cliente</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth className={classes.formControl}>\r\n                  <InputLabel id=\"demo-simple-select-label\">Empresa</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={companyId}\r\n                    onChange={e => setCompanyId(e.target.value)}\r\n                  >\r\n                    <MenuItem value={1}>Ydeal</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Alterar Senha\r\n                </Typography>\r\n                  <Divider />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"component-simple\">Nova Senha</InputLabel>\r\n                  <Input\r\n                    id=\"component-simple\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl fullWidth className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"component-simple\">Repetir Senha</InputLabel>\r\n                  <Input\r\n                    id=\"component-simple\"\r\n                    type=\"password\"\r\n                    value={passwordConfirm}\r\n                    onChange={e => setPasswordConfirm(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                className={classes.button}\r\n                direction=\"row\"\r\n                justify=\"flex-end\"\r\n                alignItems=\"flex-end\"\r\n              >\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  Salvar\r\n              </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </form>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}