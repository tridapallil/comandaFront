{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Luiz Felipe\\\\Documents\\\\React\\\\comandafront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Luiz Felipe\\\\Documents\\\\React\\\\comandafront\\\\src\\\\pages\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport '../styles/Login.css';\nimport api from '../services/api';\nimport logo from \"../assets/logo.svg\";\nexport default function Login({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useSnackbar = useSnackbar(),\n        enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  async function handleRegister(e) {\n    history.push(\"/register\");\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!username || !password) {\n      enqueueSnackbar('Preencha os campos.', {\n        variant: 'warning'\n      });\n      return false;\n    }\n\n    const response = await api.post('/login', {\n      username,\n      password\n    }).catch(error => {\n      enqueueSnackbar('Falha ao efetuar login.', {\n        variant: 'error'\n      });\n    });\n\n    if (!response) {\n      return;\n    }\n\n    const token = response.data.token;\n\n    if (token) {\n      localStorage.setItem('@comanda/token', token);\n      history.push(\"/\");\n      window.location.reload();\n      enqueueSnackbar('Login realizado com sucesso!', {\n        variant: 'success'\n      });\n    } else {\n      enqueueSnackbar('Falha ao efetuar login.', {\n        variant: 'error'\n      });\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"login-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"Comanda +\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Usu\\xE1rio\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Senha\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn-submit\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Entrar\"), React.createElement(\"button\", {\n    className: \"btn-register\",\n    onClick: handleRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Cadastrar\")));\n}","map":{"version":3,"sources":["C:\\Users\\Luiz Felipe\\Documents\\React\\comandafront\\src\\pages\\Login.js"],"names":["React","useState","useSnackbar","api","Login","history","username","setUsername","password","setPassword","enqueueSnackbar","handleRegister","e","push","handleSubmit","preventDefault","variant","response","post","catch","error","token","data","localStorage","setItem","window","location","reload","logo","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport '../styles/Login.css';\r\n\r\nimport api from '../services/api'\r\nimport logo from '../assets/logo.svg';\r\n\r\nexport default function Login({ history }) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    async function handleRegister(e) {\r\n        history.push(\"/register\");\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (!username || !password) {\r\n            enqueueSnackbar('Preencha os campos.', {\r\n                variant: 'warning'\r\n            });\r\n            return false;\r\n        }\r\n        const response = await api.post('/login', { username, password }).catch(error => {\r\n            enqueueSnackbar('Falha ao efetuar login.', {\r\n                variant: 'error'\r\n            });\r\n        });\r\n\r\n        if (!response) {\r\n            return;\r\n        }\r\n        const { token } = response.data;\r\n\r\n        if (token) {\r\n            localStorage.setItem('@comanda/token', token);\r\n            history.push(\"/\");\r\n            window.location.reload();\r\n            enqueueSnackbar('Login realizado com sucesso!', {\r\n                variant: 'success'\r\n            });\r\n        } else {\r\n            enqueueSnackbar('Falha ao efetuar login.', {\r\n                variant: 'error'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='login-container'>\r\n            <form onSubmit={handleSubmit}>\r\n                <img src={logo} alt='Comanda +'></img>\r\n                <input\r\n                    placeholder=\"UsuÃ¡rio\"\r\n                    value={username}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    placeholder=\"Senha\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                />\r\n                <button className=\"btn-submit\" type=\"submit\">Entrar</button>\r\n                <button className=\"btn-register\" onClick={handleRegister}>Cadastrar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}